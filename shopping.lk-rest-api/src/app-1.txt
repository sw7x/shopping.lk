import MongoDBConfig from "./configs/mongodb.config";
import { handleError } from "./helpers/handle.error";
import router from "./routes";
const morgan = require("morgan");
const helmet = require("helmet");
const compression = require("compression");
const express = require("express");
require("dotenv").config();

// middleware library imports
const bodyParser = require("body-parser");
const cookieParser = require("cookie-parser");
const passport = require("passport"); // for auth

//const port = 3000
const app = express();

// middlewares
app.use(morgan("dev")); // dev, common, combined, short, tiny
app.use(helmet());
app.use(compression());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// here is the middleware being chained together
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));
app.use(cookieParser);
app.use(passport.initialize());

// configs: connnect databases, connect RabbitMQ, connect to websockets
MongoDBConfig.connect();

// routes
// routes
app.use("/api/v1/posts", postsRouter);
app.use("/api/v1/tasks", tasksRouter);

// handle errors
app.use(handleError);

module.exports = app;
